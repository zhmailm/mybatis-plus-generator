package ${packageName}.domain;

#foreach ($import in $importList)
import ${import};
#end
#if($table.crud || $table.sub)
import com.zhm.gen.common.web.base.BaseDomain;
#elseif($table.tree)
import com.zhm.gen.common.web.base.TreeDomain;
#end
import io.swagger.annotations.ApiModelProperty;

/**
 * ${functionName}对象 ${tableName}
 * 
 * @author ${author}
 * @date ${datetime}
 */
#if($table.crud || $table.sub)
#set($Entity="BaseDomain")
#elseif($table.tree)
#set($Entity="TreeDomain")
#end
public class ${ClassName} extends ${Entity}{

    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
    /** $column.columnComment */
    @ApiModelProperty(value = "$column.columnComment")
#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#end
    private $column.javaType $column.javaField;

#end
#end
#if($table.sub)
    /** $table.subTable.functionName信息 */
    private List<${subClassName}> ${subclassName}List;

#end
#foreach($field in ${columns})
#if(!$table.isSuperColumn($field.javaField))
    #if(${field.javaType.equals("boolean")})
        #set($getprefix="is")
    #else
        #set($getprefix="get")
    #end

    public ${field.javaType} ${getprefix}${field.javaFieldCap}(){
        return ${field.javaField};
    }

    public void set${field.javaFieldCap}(${field.javaType} ${field.javaField}){
        this.${field.javaField} = ${field.javaField};
    }
#end
#end
}
